// <auto-generated />
using System;
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(MultiTenantStoreDbContext))]
    partial class MultiTenantStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Shared.ModeloDeDominio.Institucion", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("Activa")
                        .HasColumnType("bit");

                    b.Property<string>("ConnectionString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SuscripcionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Identifier")
                        .IsUnique()
                        .HasFilter("[Identifier] IS NOT NULL");

                    b.HasIndex("SuscripcionId");

                    b.ToTable("Institucion");
                });

            modelBuilder.Entity("Shared.ModeloDeDominio.Precio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaVigencia")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("Precio");
                });

            modelBuilder.Entity("Shared.ModeloDeDominio.Producto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nombre")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Shared.ModeloDeDominio.Suscripcion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechainicio")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("Suscripciones");
                });

            modelBuilder.Entity("Shared.ModeloDeDominio.Institucion", b =>
                {
                    b.HasOne("Shared.ModeloDeDominio.Suscripcion", "Suscripcion")
                        .WithMany()
                        .HasForeignKey("SuscripcionId");

                    b.Navigation("Suscripcion");
                });

            modelBuilder.Entity("Shared.ModeloDeDominio.Precio", b =>
                {
                    b.HasOne("Shared.ModeloDeDominio.Producto", null)
                        .WithMany("Precios")
                        .HasForeignKey("ProductoId");
                });

            modelBuilder.Entity("Shared.ModeloDeDominio.Suscripcion", b =>
                {
                    b.HasOne("Shared.ModeloDeDominio.Producto", "Producto")
                        .WithMany("Suscripciones")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Shared.ModeloDeDominio.Producto", b =>
                {
                    b.Navigation("Precios");

                    b.Navigation("Suscripciones");
                });
#pragma warning restore 612, 618
        }
    }
}
